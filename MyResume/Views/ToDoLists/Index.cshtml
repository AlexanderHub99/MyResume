@model MyResume.Models.ToDoListGenreViewModel

@{
    ViewData["Title"] = "Index";
}


<div class="alert alert-success" role="alert">
  <h4 class="alert-heading">Проект ToDoList</h4>
  <p>В данном решении был использован паттерн проектирования веб-приложений <b>MVC</b>, также использовался <b>EntityFramework</b> для создания базы данных <b>MsSql</b> и <b>Migrations</b> для контроля версии базы данных.
      Контроллер приложения написан в асинхронном стиле программирования с использованием ключевых слов <em>async </em> и <em>await </em>. Представления <b>Views</b>, написаны с использованием движка <b>Razor</b>, для стилизации использовался <b>Bootstrap 4.0</b>. Приложение написано на 
      <b>ASP.NET Core 5.0</b> портировано и представлено на <b>ASP.NET Core 6.0.</b> </p>
  <hr>
  <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text " id="inputGroup-sizing-default"><img src="~/img/github.svg" /></span>
            </div>
            <button class="form-control btn btn-primary" type="button" onClick='location.href="https://github.com/AlexanderHub99/WebToDoListFollASP_NET_Core"' >GitHub</button>
            
        </div>
</div>
<p>
    <a class="btn btn-warning" asp-action="Create">New ToDoList</a>
</p>

<form asp-controller="ToDoLists" asp-action="Index" method="get">
    Task Priority:<select asp-for="TaskData" asp-items="Model.Genres" class="form-control" id="exampleFormControlSelect2">
        <option value="">All</option>
    </select>
    Date:<input type="date" asp-for="TaskPriority" class="form-control" id="exampleFormControlSelect2" />
    Completed:<select class="form-control" id="exampleFormControlSelect2" data-val="true"  name="Completed">
        <option value="" selected="selected">All</option>
        <option value="True">Выполненные</option>
        <option value="False">Не ныполненные</option>

    </select>
    <input type="submit" value="Filter" class="btn btn-secondary" style="margin: 10px" />
</form>
<table class="table" >
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ToDoLists[0].CompletedNotCompleted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ToDoLists[0].Task)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ToDoLists[0].dateOfCompletion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ToDoLists[0].priority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody class="table">
@foreach (var item in Model.ToDoLists) {
        <tr>
            <td>
                @Html.DisplayFor(modelItrm => item.CompletedNotCompleted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Task)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.dateOfCompletion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.priority)
            </td>
            <td>
                <a class="btn btn-outline-success"asp-action="Edit" asp-route-id="@item.id">Edit</a> |
                <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.id" >Details</a> |
                <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
